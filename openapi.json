{
    "openapi" : "3.0.3" , 
    "info":{
        "version" : "0.0.1" , 
        "title" : "Customer Complaint Management System" , 
        "summary" : "Backend for the Customer Complaint Portal" , 
        "description" : "Provides endpoint to help in complaint generation and resolution" ,
        "termsOfService" : "https://github.com/adeisbright/customer-complaint-backend/readme.md" , 
        "contact" : {
            "name" : "Adeleke Bright" , 
            "email" : "adenababanla@gmail.com" , 
            "url" : "https://linkedin.com/in/adeleke-bright"
        } , 
        "license" : {
            "name" : "Apache 2.0" , 
            "url" : "https://apache.org/license/license-2.0.html"
        }
    } , 
    "servers" : [
            {
                "url" : "http://localhost:{port}" , 
                "description" : "Local Server" , 
                "variables" : {
                    "port":{
                        "default" : 4800 , 
                        "description" : "The port number you intend to run your server on"
                    }
                }
            },
            {
                "url" : "{rooUrl}/docs" , 
                "description" : "Production Server" , 
                "variables" : {
                    "rootUrl":{
                        "default" : "http://customer-complaint.herokuapp.com",
                        "description" : "Production Server for the Documentation"
                    }
                }
            }
        ] , 
    "components" : {
        "schemas" : {
            "filters":{
                "type":"string",
                "description" : "The attributes to return from each document" ,
                "example":"title,name,description"
            },
            "page":{
                "type":"number",
                "description" : "The specific page of the request to view" ,
                "example": 3
            },
            "limit" : {
                "type":"number",
                "description" : "The number of question to skip" , 
                "example" : 5 
            } , 
            "firstName" : {
                "type":"string",
                "description":"Firstname of an entity",
                "example": "Foo"
            },
            "lastName" : {
                "type":"string",
                "description":"last name of an entity",
                "example": "Bar"
            },
            "email" : {
                "type":"string",
                "description":"email address",
                "example": "foo@bar.com"
            },
            "password" : {
                "type":"string",
                "description":"password to login",
                "example": "password"
            },
            "branch" : {
                "type":"string",
                "description":"logical grouping of organization's geography",
                "example": "First Branch"
            },
            "phoneNumber" : {
                "type":"string",
                "description":"Telephone number",
                "example": "+2348140850132"
            },
            "city" : {
                "type":"string",
                "description":"A place's city",
                "example": "Lagos"
            },
            "state" : {
                "type":"string",
                "description":"A state within a country",
                "example": "Lagos"
            },
            "address" : {
                "type":"string",
                "description":"Full address of a place",
                "example": "KM 20 Lekki-Epe Ajah Express Road"
            },
            "body" : {
                "type" : "object"  , 
                "description" : "An array of the search result" , 
                "properties" : {
                    "data" : {
                        "type" : "Array"
                    } , 
                    "message" : {
                        "$ref" : "#/components/schemas/message"
                    }
                } , 
                "example" : {
                    "message" : "The message" , 
                    "statusCode" : 200 , 
                    "data" : []
                }
            } , 
            "message" : {
                "type" : "string" , 
                "description" : "A response message from the server" , 
                "example" : "Your question was added successfully"
            },
            "statusCode" : {
                "type" : "integer" , 
                "format" : "int64" , 
                "description" : "Status code after server completes request handling" , 
                "example" : 200
            } , 
            "status" : {
                "type" : "string" ,  
                "description" : "A message indicating the outcome of the operation" , 
                "example" : "ok"
            } , 
            "data" : {
                "type" : "object" 
            }
        } , 
        "responses":{
            "200" : {
                "description" : "Request was successful"  , 
                "content" : {
                    "application/json" : {
                        "type" : "object" , 
                        "properties" : {
                            "message" : {
                                "$ref" : "#/components/schemas/message"
                            }, 
                            "statusCode" : {
                                "$ref" : "#/components/schemas/statusCode"
                            } , 
                            "body" : {
                                "type" : "object" , 
                                "description" : "Body of the data response" , 
                                "properties" : {
                                    "data" : {
                                        "type" : "Array || string || number || object"
                                    }
                                }
                            }
                        }
                    }
                }
            } , 
            "201" : {
                "description" : "Request was successful and a new item was created"  , 
                "content" : {
                    "application/json" : {
                        "type" : "object" , 
                        "properties" : {
                            "message" : {
                                "$ref" : "#/components/schemas/message"
                            }, 
                            "statusCode" : {
                                "$ref" : "#/components/schemas/statusCode"
                            } , 
                            "body" : {
                                "$ref" : "#/components/schemas/body"
                            }
                        }
                    }
                }
            } , 
            "400" : {
                "description" : "A bad request from the user"  , 
                "content" : {
                    "application/json" : {
                        "type" : "object" , 
                        "properties" : {
                            "message" : {
                                "$ref" : "#/components/schemas/message"
                            }, 
                            "statusCode" : {
                                "$ref" : "#/components/schemas/statusCode"
                            }
                        }
                    }
                }
            } , 
            "401" : {
                "description" : "An unauthorized request. This happens when user provides wrong credentials"  , 
                "content" : {
                    "application/json" : {
                        "type" : "object" , 
                        "properties" : {
                            "message" : {
                                "$ref" : "#/components/schemas/message"
                            }, 
                            "statusCode" : {
                                "$ref" : "#/components/schemas/statusCode"
                            }
                        }
                    }
                }
            } , 
            "500" : {
                "description" : "An error on the server"  , 
                "content" : {
                    "application/json" : {
                        "type" : "object" , 
                        "properties" : {
                            "message" : {
                                "$ref" : "#/components/schemas/message"
                            }, 
                            "statusCode" : {
                                "$ref" : "#/components/schemas/statusCode"
                            }
                        }
                    }
                }
            }
        } , 
        "securitySchemes" : {
            "bearerAuth" : {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT" , 
                "in" : "header" 
            }
        }
    } , 
    "paths" : {
            "/auth/admin" : {
                "post" : {
                    "tags"  : ["Admin Login"] , 
                    "description" : "Logs the admin and generates token" , 
                    "requestBody" : {
                        "description" : "The login credentials for admin" , 
                        "required" : true , 
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "type" : "object",
                                    "properties" : {
                                        "email" : {
                                            "$ref" : "#/components/schemas/email"
                                        } , 
                                        "password" : {
                                            "$ref" : "#/components/schemas/password"
                                        }
                                    } , 
                                    "required" : ["email" , "password"]
                                }
                            }
                        }
                    } , 
                    "responses" : {
                        "201" : {
                            "$ref" : "#/components/responses/201"
                        } , 
                        "400" : {
                            "$ref" : "#/components/responses/400"
                        } , 
                        "401" : {
                            "$ref" : "#/components/responses/401"
                        } , 
                        "500" : {
                            "$ref" : "#/components/responses/500"
                        }
                    }
                }
            } , 
            "/v1/branches" : {
                "get" : {
                    "tags"  : ["Get Branches"] , 
                    "description" : "Gets all the avalable branches" , 
                    "parameters" : [
                        {
                            "name" : "filters" , 
                            "in" : "query" , 
                            "required" : true , 
                            "schema" : {
                                "$ref" : "#/components/schemas/filters"
                            }
                        } , 
                        {
                            "name" : "limit" , 
                            "in" : "query" , 
                            "required" : false , 
                            "schema" : {
                                "$ref" : "#/components/schemas/limit"
                            }
                        } , 
                        {
                            "name" : "page" , 
                            "in" : "query" , 
                            "required" : false , 
                            "schema" : {
                                "$ref" : "#/components/schemas/page"
                            }
                        }
                    ] , 
                    "responses" : {
                        "200" : {
                            "$ref" : "#/components/responses/200"
                        } , 
                        "500" : {
                            "$ref" : "#/components/responses/500"
                        }
                    }
                } , 
                "post" : {
                    "description" : "Adds a new branch" , 
                    "tags"  : ["Add New Branch"] , 
                    "requestBody" : {
                        "description" : "Data needed when creating a branch",
                        "required"  :true , 
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "type" : "object" , 
                                    "properties" : {
                                        "name" : {
                                            "$ref" : "#/components/schemas/name"
                                        } , 
                                        "email" : {
                                            "$ref" : "#/components/schemas/email"
                                        } , 
                                        "phoneNumber" : {
                                            "$ref" : "#/components/schemas/phoneNumber"
                                        } , 
                                        "city" : {
                                            "$ref" : "#/components/schemas/city"
                                        } , 
                                        "state" : {
                                            "$ref" : "#/components/schemas/state"
                                        } , 
                                        "address" : {
                                            "$ref" : "#/components/schemas/address"
                                        }
                                    } , 
                                    "required" : [
                                        "name" , 
                                        "email" , 
                                        "phoneNumber" , 
                                        "city" , 
                                        "state" , 
                                        "address"
                                    ]
                                }
                            }
                        }
                    } , 
                    "responses" : {
                        "201" : {
                            "$ref" : "#/components/responses/201"
                        } , 
                        "400" : {
                            "$ref" : "#/components/responses/400"
                        } , 
                        "401" : {
                            "$ref" : "#/components/responses/401"
                        } , 
                        "500" : {
                            "$ref" : "#/components/responses/500"
                        }
                    } , 
                    "security": [
                        {
                           "bearerAuth": []
                        }
                     ]
                }
            } , 
            "/v1/branches/{id}" : {
                "get" : {
                    "description" : "Retrieve a single branch" , 
                    "tags" : ["Get a Single Branch"] , 
                    "parameters" : [
                        {
                            "name" : "id" , 
                            "in"  :"path" , 
                            "required" : true ,
                            "description" : "The unique identifier of the branch",
                            "example" : "623d318595e0ff1175c1f181"
                        }
                    ] , 
                    "responses" : {
                        "200" : {
                            "$ref"  : "#/components/responses/200"
                        } , 
                        "400" : {
                            "$ref"  : "#/components/responses/400"
                        }  , 
                        "401" : {
                            "$ref" : "#/components/responses/401"
                        } , 
                        "500" : {
                            "$ref" : "#/components/responses/500"
                        }
                    }
                } , 
                "patch" : {
                    "description"  : "Update a particular field(s) in" , 
                    "tags" : ["Update a Branch"] , 
                    "parameters": [
                        {
                            "name" : "id" , 
                            "in"  :"path" , 
                            "required" : true ,
                            "description" : "The unique identifier of the branch",
                            "example" : "623d318595e0ff1175c1f181"
                        }
                    ] , 
                    "requestBody" : {
                        "description" : "The field to update or add to the branch" , 
                        "required" : true , 
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "type" : "object" , 
                                    "properties" : {
                                        "name" : {
                                            "$ref" : "#/components/schemas/name"
                                        }
                                    }
                                }
                            }
                        }
                    } , 
                    "responses" : {
                        "200" : {
                            "$ref"  : "#/components/responses/200"
                        } , 
                        "400" : {
                            "$ref"  : "#/components/responses/400"
                        }  , 
                        "401" : {
                            "$ref" : "#/components/responses/401"
                        } , 
                        "500" : {
                            "$ref" : "#/components/responses/500"
                        }
                    },
                    "security" : [
                        {
                            "bearerAuth" : []
                        }
                    ]
                } , 
                "delete" : {
                    "description" : "Removes a branch" , 
                    "tags" : ["Removes a branch"] , 
                    "parameters" : [
                        {
                            "name" : "id" , 
                            "in"  : "path" , 
                            "required" : true , 
                            "example" :"623d318595e0ff1175c1f181"
                        }
                    ] , 
                    "responses" : {
                        "responses" : {
                            "200" : {
                                "$ref"  : "#/components/responses/200"
                            } , 
                            "400" : {
                                "$ref"  : "#/components/responses/400"
                            }  , 
                            "401" : {
                                "$ref" : "#/components/responses/401"
                            } , 
                            "500" : {
                                "$ref" : "#/components/responses/500"
                            }
                        }
                    } , 
                    "security" : [
                        {
                            "bearerAuth" : []
                        }
                    ]
                }
            } , 
            "/v1/managers" : {
                "get" : {
                    "parameters" : [
                        {
                            "name" : "page" , 
                            "in" : "query" , 
                            "required" : "true" , 
                            "description" : "The particular page of the API to load" , 
                            "schema" : {
                                "type" : "integer" , 
                                "default" : 0
                            }
                        } ,
                        {
                            "name" : "limit" , 
                            "in" : "query" , 
                            "required" : "true" , 
                            "description" : "The number of question to skip" , 
                            "schema" : {
                                "type" : "integer" , 
                                "default" : 10
                            }
                        } , 
                        {
                            "name" : "filters" , 
                            "in" : "query" , 
                            "required" : false , 
                            "description" : "The attributes to return from each document" , 
                            "schema" : {
                                "type" : "string",
                                "example":"title,name,description"
                            }
                        }  
                        
                    ], 
                    "description" : "Retrieving a list of managers" ,
                    "responses":{
                        "200" :{
                            "description" : "Returns the first 10 managers" , 
                            "content" : {
                                "application/json":{
                                    "type" : "array"
                                }
                            }
                        } , 
                        "400" : {
                            "$ref" :"#/components/responses/400"
                        },
                        "500" : {
                            "$ref" :"#/components/responses/500"
                        }
                    }
                } , 
                "post" : {
                    "description" : "Adds a new manager" , 
                    "requestBody" : {
                        "description" : "The manager data" , 
                        "required" : true , 
                        "content" : {
                            "application/json":{
                                    "schema" : {
                                        "type" : "object" ,
                                        "properties" : {
                                            "firstName" : {
                                                "$ref" : "#/components/schemas/firstName" 
                                            } , 
                                            "lastName" : {
                                                "$ref" : "#/components/schemas/lastName" 
                                            } , 
                                            "email" : {
                                                "$ref" : "#/components/schemas/email" 
                                            } , 
                                            "phoneNumber" : {
                                                "$ref" : "#/components/schemas/phoneNumber" 
                                            } ,
                                            "branch" : {
                                                "$ref" : "#/components/schemas/branch" 
                                            }
                                        } , 
                                        "required" : [
                                            "firstName" , 
                                            "lastName" , 
                                            "email",
                                            "phoneNumber" , 
                                            "branch"
                                        ]
                                }
                            }
                        }
                    } , 
                    "responses":{
                        "201" :{
                            "$ref" :"#/components/responses/201"
                        } , 
                        "400" : {
                            "$ref" :"#/components/responses/400"
                        },
                        "500" : {
                            "$ref" :"#/components/responses/500"
                        }
                    }
                }
            } , 
            "/v1/managers/{id}" : {
                "patch": {
                    "description" : "Updates a manager record" , 
                    "requestBody" : {
                        "required" : true , 
                        "content" : {
                            "application/json":{
                                    "schema" : {
                                        "type" : "object" ,
                                        "properties" : {
                                            "firstName" : {
                                                "$ref" : "#/components/schemas/firstName" 
                                            } , 
                                            "anyOtherField" : "//You can provide details of the field //"
                                        } , 
                                        "required" : ["firstName"]
                                }
                            }
                        }
                    } , 
                    "responses":{
                        "201" :{
                            "$ref" :"#/components/responses/201"
                        } , 
                        "400" : {
                            "$ref" :"#/components/responses/400"
                        },
                        "500" : {
                            "$ref" :"#/components/responses/500"
                        }
                    }
                },
                "delete" : {
                    "parameters" : {

                    },
                    "responses":{
                        "201" :{
                            "$ref" :"#/components/responses/201"
                        } , 
                        "400" : {
                            "$ref" :"#/components/responses/400"
                        },
                        "500" : {
                            "$ref" :"#/components/responses/500"
                        }
                    }
                },
                "get" : {
                    "description" : "",
                    "parameters":[
                        {
                            "name":"id" , 
                            "in" : "path" , 
                            "required" : true , 
                            "example" : "623d318595e0ff1175c1f181",
                            "schema":{
                                "type" : "string"
                            }
                        }
                    ],
                    "responses":{
                        "200" :{
                            "description" : "Returns all questions that matches the query" , 
                            "content" : {
                                "application/json":{
                                    "type" : "object"
                                }
                            }
                        } , 
                        "400" : {
                            "$ref" :"#/components/responses/400"
                        },
                        "500" : {
                            "$ref" :"#/components/responses/500"
                        }
                    }
                }
            }
        }
}
